/*Viết chương trình nhập mật khẩu dạng *** lên màn hinh LCD, nếu nhập đúng mật khẩu là sổ "8888" hi bật rơle 1, nếu nhập sai mật khẩu thì đèn đỏ sẽ nhấp nháy cảnh báo, màn hình sẽ yêu cầu nhập lại mật khẩu, sau 3 lần nhập sai mật khẩu sẽ bật role 2./
//cach 1
#include <io.h>
#include <alcd.h>
#include <stdio.h> 
#include <stdint.h> 
#include <stdlib.h> 
#include <limits.h>


int keypad[3][3] = {1,2,3,4,5,6,7,8,9}; 
char data[16]; 
int buffer[16];
unsigned int counter = 0;
int index = 0;
int counter_failed = 0;

void on_click();
char check_pass();
void clear_data();
void clear_pass();

char lock = 0;

interrupt [TIM0_OVF] void timer0_ovf_isr(void)
{

    TCNT0=0x06;      
    if (counter >= INT_MAX)
        counter = 0;
    counter++;
}

void ct_delay_ms(unsigned int ms)
{
    counter = 0;
    while (counter < ms);
}

void main(void)
{

    lcd_init(16);
    
    DDRD = 0x0B;
    PORTD = 0x00;   
    
    
    DDRF = 0b11101010; 
    PORTF = 0b00010101;
    

    ASSR=0<<AS0;
    TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
    TCNT0=0x06;
    OCR0=0x00;  
    
    
    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);

    #asm("sei")
    
    

    while (1)                    
    {
        on_click();
        
    }
}


void on_click()
{
    char a; 
    int i, j; 
    for(j=0; j < 3; j++ )
    { 
        if(j == 0) 
            PORTF = 0b11111101; 
        if(j == 1) 
            PORTF = 0b11110111; 
        if(j == 2) 
            PORTF = 0b11011111; 
        for(i=0; i<3; i++)
        { 
            if(i==0)
            { 
                a=PINF&0x04; 
                if(a != 0x04)
                {        
                    if (!lock)
                    {
                        lcd_gotoxy(0,0);
                        lcd_clear();   
                        data[index] = keypad[i][j] + '0'; 
                        lcd_puts(data); 
                        ct_delay_ms(300); 
                        lcd_gotoxy(0,0);
                        lcd_clear(); 
                        data[index] = '*';  
                        lcd_puts(data);    
                        ct_delay_ms(500);   
                        buffer[index] = keypad[i][j];  
                        index++;                    
                        if (index == 4)
                        {   
                            if ( check_pass() == 1)
                            {
                                lock = 1;
                                PORTD = 0x01;
                                lcd_clear();
                                lcd_putsf("Success!");
                            }
                        }
                    }
                } 
            } 
            if(i==1)
            { 
                a=PINF&0x10; 
                if(a != 0x10)
                {    
                    if (!lock)
                    {
                        lcd_gotoxy(0,0);
                        lcd_clear();   
                        data[index] = keypad[i][j] + '0'; 
                        lcd_puts(data); 
                        ct_delay_ms(300); 
                        lcd_gotoxy(0,0);
                        lcd_clear(); 
                        data[index] = '*';  
                        lcd_puts(data);    
                        ct_delay_ms(500);
                        buffer[index] = keypad[i][j];
                        index++;                      
                        if (index == 4)
                        {   
                            if ( check_pass() == 1)
                            {
                                lock = 1;
                                PORTD = 0x01;
                                lcd_clear(); 
                                lcd_putsf("Success!");
                            }
                        }
                    }
                } 
            } 
            if(i==2)
            { 
                a=PINF&0x01; 
                if(a != 0x01)
                {     
                    if (!lock)
                    {
                        lcd_gotoxy(0,0);
                        lcd_clear();   
                        data[index] = keypad[i][j] + '0'; 
                        lcd_puts(data); 
                        ct_delay_ms(300); 
                        lcd_gotoxy(0,0);
                        lcd_clear(); 
                        data[index] = '*';  
                        lcd_puts(data);    
                        ct_delay_ms(500);
                        buffer[index] = keypad[i][j];  
                        index++;                    
                        if (index == 4)
                        {   
                            if ( check_pass() == 1)
                            {
                                lock = 1;
                                PORTD = 0x01;
                                lcd_clear(); 
                                lcd_putsf("Success!");
                            }
                        }
                    }
                } 
            } 
        } 
    } 
}


void clear_data()
{
    int i;
    for (i = 0 ; i < 16 ; i++)
    {
        data[i] = '\0';
    }
}


char check_pass()
{
    int i, j;         
    for ( i = 0 ; i < 4 ; i++)
    {
        if (buffer[i] != 8) 
        {
            counter_failed++;  
            lcd_clear();
            lcd_putsf("Failed!");
            for ( j = 0 ; j < 5 ; j++)
            {
                PORTD.3 = ~PORTD.3;
                ct_delay_ms(100);
            }   
            PORTD.3 = 0;
            clear_data();
            clear_pass();
            ct_delay_ms(500);
            lcd_clear();
            index = 0;
            if (counter_failed == 3)
            {
                lock = 1;  
                lcd_putsf("Locked!");
                PORTD = 0x02;
            }
            return 0;
        }        
    }
    return 1;
}


void clear_pass()
{
    int i;
    for (i = 0 ; i < 16 ; i++)
    {
        buffer[i] = -1;
    }
}




// cach 2//
#include <io.h>
#include <delay.h>
#include <alcd.h>
#include <stdbool.h>
#include <string.h>

#define RL1 PORTC.3
#define RL2 PORTC.2
#define LED_GREEN PORTD.5
#define LED_RED PORTD.4


char password[16] = "8888";
char buf[16];
char data[16];
int cur=0;
int attempt=0;
bool acc = false,alert=false;
int timer;

interrupt [TIM0_OVF] void timer0_ovf_isr(void)
{
    TCNT0=0x06;
    timer++;
    if(alert && timer % 100 == 0){
        timer=0; 
    }

}

bool check(char a[16]){
    int i;
    for(i=0;a[i]!='\0';++i){
        if(a[i]!=password[i]){
            return false;
        }
    }
    return true;
}

void click(int i,int j){
    int button = i*3 + j+1;

    if(acc || attempt>=3) return;

    data[cur] = button + '0';
    buf[cur++] = '*';

    if(cur==1) alert = false;
    
    if(cur==4){
        if(!check(data)){
            memset(data,0,16);
            memset(buf,0,16);
            cur = 0;     
            alert = true;
            ++attempt;
            if(attempt==3)RL2 = 1;
            lcd_clear();
        }else{
            RL1 = 1;      
            acc = true;
            lcd_clear();
        }
    }
    delay_ms(250);
}

void HienThi(){
    char a;
    int i,j;

    for(j = 0; j<3;++j){
        if(j==0)PORTF = 0b11111101;
        if(j==1)PORTF = 0b11110111;
        if(j==2)PORTF = 0b11011111;
        
        for(i = 0;i<3;++i){
            if(i==0){
                a = PINF&0x04;
                if(a != 0x04){
                    click(i,j);
                }
            }
            
            if(i==1){
                a = PINF&0x10;
                if(a!=0x10){
                    click(i,j);
                }
            }
            
            if(i==2){
                a = PINF&0x01;
                if(a!=0x01){                    
                    click(i,j);
                }
            }
        }
    }
}

void main(void){
    lcd_init(16);
    DDRF  = 0b11101010;
    PORTF = 0b00010101;
           
    
    ASSR=0<<AS0;
    TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
    TCNT0=0x06;
    OCR0=0x00;
    
    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);

    #asm("sei")
    while (1){        
        HienThi();
        lcd_gotoxy(0,0);       
            
        
        /*
                DDRD = 0x30; 
                PORTD = 0x30;
                delay_ms(1000);
                PORTD = 0x00;
                delay_ms(1000); 
        */
        if(!acc){   
           if (attempt<1)  {
            lcd_putsf("Nhap mat khau:"); 
           }
           else if( attempt >= 1 && attempt<3){
                lcd_putsf("Nhap mat khau:");   
                DDRD = 0x30;   
                delay_ms(500);
                DDRD = 0x00;
                delay_ms(500);    
            }
            else {
                lcd_putsf("Ban da nhap sai qua so lan quy dinh!");  
                DDRC = 0x04;
                RL2 = 0;        
            }
        }else {
            lcd_putsf("Thanh cong!");
            DDRC = 0x08;
            RL1 = 0;   
         }
        lcd_gotoxy(0,1);
        lcd_puts(buf); 
    }
}

